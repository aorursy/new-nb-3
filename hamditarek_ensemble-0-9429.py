fake_users = [3675092,

 3675220,

 3675222,

 3675224,

 3675664,

 3675671,

 3676611,

 3678832,

 3678915,

 3680489,

 3686898,

 3696177,

 3696197,

 3706230,

 3706233,

 3728046,

 3728371,

 3728378,

 3728380,

 3736552,

 3739847,

 3746563,

 3751307,

 3751312,

 3752776,

 3754293,

 3754888,

 3755063,

 3766462,

 3773321,

 3773324,

 3773327,

 3773331,

 3774072,

 3774628,

 3774641,

 3778645,

 3778835,

 3780007,

 3782022,

 3782029,

 3784627,

 3786361,

 3793491,

 3802384,

 3804591,

 3804598,

 3804602,

 3804605,

 3804610,

 3804614,

 3813532,

 3814787,

 3870028,

 3870030,

 3870160,

 3872008,

 3874367,

 3878358,

 3885616,

 3885782,

 3886152,

 3886162,

 3890934,

 3890938,

 3890942,

 3890943,

 3890951,

 3890953,

 3891400,

 3919708,

 3920857,

 3941138,

 3942591,

 3950989,

 3951346,

 3953392,

 3954152,

 3956200,

 3956208,

 3956212,

 3957622,

 3957646,

 3957647,

 3962111,

 3963078,

 3964729,

 3974966,

 3976537,

 3976549,

 3976581,

 3978840,

 3981018,

 3986769,

 3990744,

 3991684,

 3991785,

 3992349,

 3992365,

 3992371,

 3994323,

 3994685,

 4001389,

 4001670,

 4001792,

 4001969,

 4003304,

 4003306,

 4003349,

 4008952,

 4009339,

 4011062,

 4011789,

 4012423,

 4012512,

 4013026,

 4015663,

 4017735,

 4018119,

 4023200,

 4023810,

 4023849,

 4025569,

 4025585,

 4033888,

 4038711,

 4039648,

 4043140,

 4044092,

 4046075,

 4046088,

 4047811,

 4047814,

 4049130,

 4049455,

 4052338,

 4052382,

 4052416,

 4052838,

 4052894,

 4054484,

 4063978,

 4065054,

 4069816,

 4072304,

 4072318,

 4074954,

 4076564,

 4077862,

 4077896,

 4080555,

 4080560,

 4080750,

 4080758,

 4080767,

 4083310,

 4084704,

 4086831,

 4089011,

 4089018,

 4091311,

 4091608,

 4098204,

 4102399,

 4104099,

 4104546,

 4105756,

 4106102,

 4106104,

 4106265,

 4108498,

 4112290,

 4113512,

 4113992,

 4114021,

 4114073,

 4120021,

 4122335,

 4122503,

 4123436,

 4124809,

 4124830,

 4126213,

 4127131,

 4129482,

 4133128,

 4133382,

 4137019,

 4137651,

 4138422,

 4139290,

 4139736,

 4140415,

 4140866,

 4140876,

 4140885,

 4140888,

 4142722,

 4142857,

 4146328,

 4147304,

 4149421,

 4149429,

 4154121,

 4154484,

 4155526,

 4157307,

 4158172,

 4159899,

 4159911,

 4161494,

 4161824,

 4162840,

 4162863,

 4162881,

 4163437,

 4163633,

 4163827,

 4165162,

 4165203,

 4165205,

 4165211,

 4165225,

 4167358,

 4168182,

 4168420]
fraud_tran_users = [3671888,

 3676402,

 3676410,

 3677776,

 3679661,

 3679667,

 3682263,

 3685848,

 3686652,

 3689369,

 3689599,

 3697831,

 3697893,

 3698063,

 3700660,

 3700663,

 3701086,

 3703681,

 3707336,

 3708386,

 3711944,

 3711956,

 3715012,

 3729146,

 3729719,

 3730919,

 3736667,

 3742126,

 3753511,

 3756488,

 3762286,

 3764738,

 3764741,

 3764742,

 3764746,

 3765703,

 3777492,

 3779360,

 3790961,

 3791376,

 3791418,

 3800966,

 3804339,

 3804974,

 3811777,

 3811834,

 3817323,

 3817332,

 3817337,

 3819508,

 3820639,

 3825564,

 3830237,

 3830645,

 3830648,

 3833416,

 3839619,

 3839621,

 3839628,

 3840265,

 3853868,

 3855783,

 3856122,

 3856126,

 3858739,

 3858741,

 3858913,

 3864705,

 3865304,

 3869334,

 3878178,

 3878818,

 3880519,

 3880795,

 3880938,

 3880978,

 3884824,

 3885935,

 3888408,

 3891513,

 3893682,

 3895696,

 3899183,

 3909492,

 3910095,

 3911943,

 3918744,

 3918752,

 3919563,

 3919569,

 3919574,

 3919867,

 3920437,

 3922735,

 3929343,

 3936498,

 3938032,

 3939861,

 3940245,

 3941736,

 3942864,

 3948602,

 3950394,

 3950401,

 3950403,

 3950415,

 3950418,

 3950421,

 3950671,

 3957368,

 3958894,

 3960455,

 3961144,

 3961650,

 3962873,

 3962877,

 3962881,

 3962909,

 3962956,

 3962959,

 3964831,

 3969750,

 3970268,

 3970688,

 3971072,

 3971571,

 3975220,

 3980008,

 3980013,

 3980645,

 3985298,

 3985306,

 3985313,

 3985672,

 3985677,

 3985682,

 3990116,

 3990119,

 3991837,

 3994482,

 3999698,

 3999702,

 3999703,

 4002412,

 4004976,

 4007409,

 4007428,

 4007433,

 4009468,

 4009473,

 4010733,

 4011164,

 4011181,

 4013047,

 4014514,

 4015014,

 4015787,

 4018153,

 4018173,

 4022610,

 4023223,

 4023849,

 4025540,

 4025641,

 4026248,

 4029004,

 4029005,

 4030751,

 4044848,

 4045018,

 4045803,

 4050099,

 4050105,

 4050117,

 4050130,

 4050636,

 4059726,

 4061664,

 4063724,

 4067067,

 4076997,

 4077309,

 4078114,

 4080429,

 4082621,

 4082894,

 4085298,

 4089316,

 4094551,

 4095410,

 4096324,

 4097033,

 4097039,

 4097272,

 4098072,

 4098491,

 4098947,

 4098974,

 4101056,

 4101425,

 4101526,

 4106264,

 4106703,

 4108065,

 4108286,

 4109485,

 4113667,

 4114458,

 4117756,

 4117771,

 4118261,

 4120923,

 4122948,

 4124677,

 4125805,

 4126117,

 4126222,

 4126226,

 4126254,

 4126258,

 4127375,

 4127380,

 4127395,

 4127590,

 4131644,

 4132416,

 4132885,

 4133012,

 4133331,

 4133359,

 4133411,

 4134322,

 4134495,

 4134499,

 4134509,

 4134642,

 4136286,

 4136534,

 4137182,

 4138950,

 4139722,

 4140204,

 4141069,

 4142428,

 4152461,

 4154580,

 4156319,

 4158363,

 4158526,

 4158615,

 4158777,

 4159713,

 4162245,

 4162612,

 4163621,

 4164780,

 4168047,

 4169416]
# This Python 3 environment comes with many helpful analytics libraries installed

# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python

# For example, here's several helpful packages to load in 



import numpy as np # linear algebra

import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

import seaborn as sns

import matplotlib.pyplot as plt

# Input data files are available in the "../input/" directory.

# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory



import os




from subprocess import check_output

print(check_output(["ls", "../input"]).decode("utf8"))

# Any results you write to the current directory are saved as output.
df = pd.read_csv("../input/009429/stack_median (1).csv")

#df.to_csv("sub1.csv", index=False)
#df1 = pd.read_csv("../input/942500/stack_median.csv")

#df1.to_csv("sub2.csv", index=False)
df.tail()
dff = df.copy()
#dff.loc[df['TransactionID'].isin(inter), 'isFraud'] = 1

dff.loc[~dfr['TransactionID'].isin(inter), 'isFraud'] = 0
fake_users

fraud_tran_users
inter = list(set(fake_users + fraud_tran_users))
dfr.loc[dfr['isFraud'] < 0.001, 'isFraud'] = 0

dfr.loc[dfr['isFraud'] > 0.98, 'isFraud'] = 1
dff.to_csv("subbb.csv", index=False)